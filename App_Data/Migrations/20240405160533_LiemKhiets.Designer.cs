// <auto-generated />
using System;
using App_Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App_Data.Migrations
{
    [DbContext(typeof(Sd18302Net104Context))]
    [Migration("20240405160533_LiemKhiets")]
    partial class LiemKhiets
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("App_Data.Models.Blog", b =>
                {
                    b.Property<Guid>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nội dung");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Ngày Đăng");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Tiêu đề");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.GioHang", b =>
                {
                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Ngày Tạo");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartId");

                    b.ToTable("Carts", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.GioHangCT", b =>
                {
                    b.Property<Guid>("CartDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Số Lượng");

                    b.HasKey("CartDetailId");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartDetails", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.HoaDon", b =>
                {
                    b.Property<Guid>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Địa chỉ");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Ngày Tạo");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Ngày Giao Hàng");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Trạng thái");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InvoiceId");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.HoaDonCT", b =>
                {
                    b.Property<Guid>("InvoiceDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Số Lượng");

                    b.Property<Guid>("SizeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Đơn Giá");

                    b.HasKey("InvoiceDetailId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId");

                    b.ToTable("InvoiceDetails", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.LoaiSP", b =>
                {
                    b.Property<Guid>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Tên loại sản phẩm");

                    b.HasKey("TypeId");

                    b.ToTable("ProductTypes", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.SanPham", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Ảnh");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Ngày Nhập");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Chất Liệu");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Tên");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Giá");

                    b.Property<Guid>("ProductTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Số Lượng");

                    b.HasKey("ProductId");

                    b.HasIndex("BrandId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.Size", b =>
                {
                    b.Property<Guid>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Kích Thước");

                    b.HasKey("SizeId");

                    b.ToTable("Sizes", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.SizeSanPham", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SizeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId", "SizeId");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductSizes", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.ThuongHieu", b =>
                {
                    b.Property<Guid>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Tên");

                    b.HasKey("BrandId");

                    b.ToTable("Brands", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Địa chỉ");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Tên");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Mật khẩu");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Số điện thoại");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Vai trò");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.GioHang", b =>
                {
                    b.HasOne("App_Data.Models.User", "User")
                        .WithMany("GioHang")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("App_Data.Models.GioHangCT", b =>
                {
                    b.HasOne("App_Data.Models.GioHang", "GioHang")
                        .WithMany("GioHangCTs")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_Data.Models.SanPham", "SanPham")
                        .WithMany("GioHangCTs")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GioHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("App_Data.Models.HoaDon", b =>
                {
                    b.HasOne("App_Data.Models.User", "User")
                        .WithMany("HoaDon")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("App_Data.Models.HoaDonCT", b =>
                {
                    b.HasOne("App_Data.Models.HoaDon", "HoaDon")
                        .WithMany("HoaDonCT")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_Data.Models.SanPham", "SanPham")
                        .WithMany("HoaDonCTs")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_Data.Models.Size", "Size")
                        .WithMany("HoaDonCTs")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("SanPham");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("App_Data.Models.SanPham", b =>
                {
                    b.HasOne("App_Data.Models.ThuongHieu", "ThuongHieu")
                        .WithMany("sanPhams")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_Data.Models.LoaiSP", "LoaiSP")
                        .WithMany("sanPhams")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiSP");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("App_Data.Models.SizeSanPham", b =>
                {
                    b.HasOne("App_Data.Models.SanPham", "SanPham")
                        .WithMany("SizeSanPhams")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_Data.Models.Size", "Size")
                        .WithMany("SizeSanPhams")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("App_Data.Models.GioHang", b =>
                {
                    b.Navigation("GioHangCTs");
                });

            modelBuilder.Entity("App_Data.Models.HoaDon", b =>
                {
                    b.Navigation("HoaDonCT");
                });

            modelBuilder.Entity("App_Data.Models.LoaiSP", b =>
                {
                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("App_Data.Models.SanPham", b =>
                {
                    b.Navigation("GioHangCTs");

                    b.Navigation("HoaDonCTs");

                    b.Navigation("SizeSanPhams");
                });

            modelBuilder.Entity("App_Data.Models.Size", b =>
                {
                    b.Navigation("HoaDonCTs");

                    b.Navigation("SizeSanPhams");
                });

            modelBuilder.Entity("App_Data.Models.ThuongHieu", b =>
                {
                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("App_Data.Models.User", b =>
                {
                    b.Navigation("GioHang");

                    b.Navigation("HoaDon");
                });
#pragma warning restore 612, 618
        }
    }
}
